<?php

/**
 * @file
 * Contains gdx_analytics_drupal_snowplow.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 * The purpose of the function is to provide users with relevant help documentation when they access specific
 * routes within the Drupal administration interface related to the module
 */
function gdx_analytics_drupal_snowplow_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.gdx_analytics_drupal_snowplow') {
    return '<h3>' . t('About') . '</h3><p>' . t('This is the GDX Analytics Drupal Snowplow module.') . '</p>';
  }
}

/**
 * Implements hook_page_attachments().
 * This function is executed during the page building process,
 * after the main content of the page has been rendered but before the page is sent to the browser.
 */
function gdx_analytics_drupal_snowplow_page_attachments(array &$page) {
  
  // Configuration file for default settings. Initially empty, gets updated with the form inputs.
  $config = \Drupal::config('gdx_analytics_drupal_snowplow.settings');
  $settings = $config->getRawData();
  
  // Set collector, script uri, app_id, snowplow_version and search path
  $page['#attached']['drupalSettings'] = [
    'gdx_collector' => $settings['gdx_collector_mode'],
    'app_id' => $settings['gdx_analytics_app_id'],
    'snowplow_version' => $settings['gdx_analytics_snowplow_version'],
    'search_path' => $settings['gdx_analytics_search_path'],
  ];

  // Will use this to check if the current route is an administrative route or not
  $admin_context = \Drupal::service('router.admin_context');

  if($admin_context->isAdminRoute()){
    // Handle logic for admin routes

    $messenger = \Drupal::messenger();
    $curr_route_name = \Drupal::routeMatch()->getRouteName();

    // define the form route to compare with the current route on the next step
    $form_route = 'gdx_analytics_drupal_snowplow.gdx_analytics_drupal_snowplow_settings_form';
    $link = Link::fromTextAndUrl('Please configure your GDX Analytics Drupal Snowplow module', Url::fromRoute($form_route));
    
    // check if the configuration is set and show a warning via messenger on the form settings page
    if(in_array('', $settings)){
      if($curr_route_name === $form_route) {
        $messenger->addWarning(t('Please Configure Your GDX Analytics Drupal Snowplow Module.<br>'
                           . 'For assistance with filling out this form, contact the GDX Analytics Team.'));
      }else {
      $messenger->addWarning($link);
      }
    }
  } else {
    // Handle logic for non-admin routes

    // Attach the main tracking code url
    $page['#attached']['drupalSettings']['script_uri'] = $settings['gdx_analytics_snowplow_script_uri'];
    
    if($settings['gdx_analytics_snowplow_version'] == 1) {
      // Handle logic if search toggle is enabled through the settings

      // Check if the URI contains the search path (default path is '/search' for Drupal Standard Search)
      $curr_uri = \Drupal::request()->getRequestUri();
      
      if (strpos($curr_uri, $settings['gdx_analytics_search_path']) !== false) {
        // Retrieve the search query parameters (first value of an array) key value pairs passed to the current script via the URL parameters
        $search_terms = reset($_GET);
        if(!empty($search_terms)) {
          $page['#attached']['drupalSettings']['search'] = true;
          // Assign the array of individual search terms (spaces as delimiters) 
          $page['#attached']['drupalSettings']['search_terms'] = explode(' ', $search_terms);
        }
      }
      // Attach the tracking code to front-end pages if search toggle is enabled
      $page['#attached']['library'][] = 'gdx_analytics_drupal_snowplow/gdx_analytics_drupal_snowplow.webtracker_search';
    } elseif ($settings['gdx_analytics_snowplow_version'] == 0) {
      // Attach the tracking code to front-end pages if search toggle is disabled
      $page['#attached']['library'][] = 'gdx_analytics_drupal_snowplow/gdx_analytics_drupal_snowplow.webtracker'; 
    }
  }
}
